<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ eGov suite of products aim to improve the internal efficiency,transparency,
  ~    accountability and the service delivery of the government  organizations.
  ~
  ~     Copyright (C) <2015>  eGovernments Foundation
  ~
  ~     The updated version of eGov suite of products as by eGovernments Foundation
  ~     is available at http://www.egovernments.org
  ~
  ~     This program is free software: you can redistribute it and/or modify
  ~     it under the terms of the GNU General Public License as published by
  ~     the Free Software Foundation, either version 3 of the License, or
  ~     any later version.
  ~
  ~     This program is distributed in the hope that it will be useful,
  ~     but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~     GNU General Public License for more details.
  ~
  ~     You should have received a copy of the GNU General Public License
  ~     along with this program. If not, see http://www.gnu.org/licenses/ or
  ~     http://www.gnu.org/licenses/gpl.html .
  ~
  ~     In addition to the terms of the GPL license to be adhered to in using this
  ~     program, the following additional terms are to be complied with:
  ~
  ~         1) All versions of this program, verbatim or modified must carry this
  ~            Legal Notice.
  ~
  ~         2) Any misrepresentation of the origin of the material is prohibited. It
  ~            is required that all modified versions of this material be marked in
  ~            reasonable ways as different from the original version.
  ~
  ~         3) This license does not grant any rights to any user of the program
  ~            with regards to rights under trademark law for use of the trade names
  ~            or trademarks of eGovernments Foundation.
  ~
  ~   In case of any queries, you can reach eGovernments Foundation at contact@egovernments.org.
  -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean name="collectionSchedular" id="collectionSchedular" parent="egovSchedular"
		lazy-init="false">
		<property name="overwriteExistingJobs" value="true" />
		<property name="autoStartup" value="true" />
		<property name="schedulerName" value="collection-scheduler" />
		<property name="triggers">
			<list>
				<ref bean="axisReconciliationCronTrigger" />
				<ref bean="remittanceInstrumentCronTrigger0" />
				<ref bean="remittanceInstrumentCronTrigger1" />
				<ref bean="remittanceInstrumentCronTrigger2" />
				<ref bean="remittanceInstrumentCronTrigger3" />
				<ref bean="remittanceInstrumentCronTrigger4" />
				<ref bean="remittanceInstrumentCronTrigger5" />
			</list>
		</property>
		<property name="applicationContextSchedulerContextKey" value="applicationQuartzContext-collection" />
	</bean>

	<!-- Add description for axisReconciliationJobScheduler -->

	<bean name="axisReconciliationJobScheduler" id="axisReconciliationJobScheduler"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		lazy-init="false">
		<property name="group" value="COLLECTION_JOB_GROUP" />
		<property name="name" value="Axis Reconciliation Job" />
		<property name="durability" value="true" />
		<property name="jobClass"
			value="org.egov.collection.scheduler.AxisReconciliationJob" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobBeanName" value="axisReconciliationJobDelegate" />
				<entry key="userName" value="egovernments" />
				<entry key="cityDataRequired" value="true" />
				<entry key="moduleName" value="collection" />
			</map>
		</property>
	</bean>

	<bean id="axisReconciliationJobDelegate" class="org.egov.collection.scheduler.AxisReconciliationJob"
		lazy-init="true" scope="prototype">
		<property name="schedularService" ref="schedularService" />
	</bean>



	<bean id="axisReconciliationCronTrigger"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
		lazy-init="true">
		<property name="jobDetail" ref="axisReconciliationJobScheduler" />
		<property name="group" value="COLLECTION_TRIGGER_GROUP" />
		<property name="name" value="Axis Reconciliation Trigger" />
		<property name="cronExpression" value="0 */30 * * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />
	</bean>

	<!-- END axisReconciliationJobScheduler -->

<!-- Add description for remittanceInstrumentJobScheduler0 -->

	<bean name="remittanceInstrumentJobScheduler0" id="remittanceInstrumentJobScheduler0"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		lazy-init="false">
		<property name="group" value="COLLECTION_REMITTANCE_JOB_GROUP" />
		<property name="name" value="RemittanceInstrumentJob0" />
		<property name="durability" value="true" />
		<property name="jobClass"
			value="org.egov.collection.scheduler.RemittanceInstrumentJob" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobBeanName" value="remittanceInstrumentJobDelegate0" />
				<entry key="userName" value="egovernments" />
				<entry key="cityDataRequired" value="true" />
				<entry key="moduleName" value="collection" />
			</map>
		</property>
	</bean>

	<bean id="remittanceInstrumentJobDelegate0" class="org.egov.collection.scheduler.RemittanceInstrumentJob"
		lazy-init="true" scope="prototype">
		<property name="remittanceSchedulerService" ref="remittanceSchedulerService" />
		<property name="instrumentType"  value="cash" />
		<property name="modulo" value="0" />
	</bean>

	<bean id="remittanceInstrumentCronTrigger0"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
		lazy-init="true">
		<property name="jobDetail" ref="remittanceInstrumentJobScheduler0" />
		<property name="group" value="COLLECTION_REMITTANCE_TRIGGER_GROUP" />
		<property name="name" value="RemittanceInstrumentTrigger0" />
		<property name="cronExpression" value="0 */10 * * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />
	</bean>
	<!-- END remittanceInstrumentJobScheduler0 -->
	
	<!-- Add description for remittanceInstrumentJobScheduler1 -->

	<bean name="remittanceInstrumentJobScheduler1" id="remittanceInstrumentJobScheduler1"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		lazy-init="false">
		<property name="group" value="COLLECTION_REMITTANCE_JOB_GROUP" />
		<property name="name" value="RemittanceInstrumentJob1" />
		<property name="durability" value="true" />
		<property name="jobClass"
			value="org.egov.collection.scheduler.RemittanceInstrumentJob" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobBeanName" value="remittanceInstrumentJobDelegate1" />
				<entry key="userName" value="egovernments" />
				<entry key="cityDataRequired" value="true" />
				<entry key="moduleName" value="collection" />
			</map>
		</property>
	</bean>

	<bean id="remittanceInstrumentJobDelegate1" class="org.egov.collection.scheduler.RemittanceInstrumentJob"
		lazy-init="true" scope="prototype">
		<property name="remittanceSchedulerService" ref="remittanceSchedulerService" />
		<property name="instrumentType"  value="cash" />
		<property name="modulo" value="1" />
	</bean>

	<bean id="remittanceInstrumentCronTrigger1"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
		lazy-init="true">
		<property name="jobDetail" ref="remittanceInstrumentJobScheduler1" />
		<property name="group" value="COLLECTION_REMITTANCE_TRIGGER_GROUP" />
		<property name="name" value="RemittanceInstrumentTrigger1" />
		<property name="cronExpression" value="0 */10 * * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />
	</bean>
	<!-- END remittanceInstrumentJobScheduler1 -->
	
	<!-- Add description for remittanceInstrumentJobScheduler2 -->

	<bean name="remittanceInstrumentJobScheduler2" id="remittanceInstrumentJobScheduler2"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		lazy-init="false">
		<property name="group" value="COLLECTION_REMITTANCE_JOB_GROUP" />
		<property name="name" value="RemittanceInstrumentJob2" />
		<property name="durability" value="true" />
		<property name="jobClass"
			value="org.egov.collection.scheduler.RemittanceInstrumentJob" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobBeanName" value="remittanceInstrumentJobDelegate2" />
				<entry key="userName" value="egovernments" />
				<entry key="cityDataRequired" value="true" />
				<entry key="moduleName" value="collection" />
			</map>
		</property>
	</bean>

	<bean id="remittanceInstrumentJobDelegate2" class="org.egov.collection.scheduler.RemittanceInstrumentJob"
		lazy-init="true" scope="prototype">
		<property name="remittanceSchedulerService" ref="remittanceSchedulerService" />
		<property name="instrumentType"  value="cheque" />
		<property name="modulo" value="0" />
	</bean>

	<bean id="remittanceInstrumentCronTrigger2"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
		lazy-init="true">
		<property name="jobDetail" ref="remittanceInstrumentJobScheduler2" />
		<property name="group" value="COLLECTION_REMITTANCE_TRIGGER_GROUP" />
		<property name="name" value="RemittanceInstrumentTrigger2" />
		<property name="cronExpression" value="0 */10 * * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />
	</bean>
	<!-- END remittanceInstrumentJobScheduler2 -->
	
	<!-- Add description for remittanceInstrumentJobScheduler3 -->

	<bean name="remittanceInstrumentJobScheduler3" id="remittanceInstrumentJobScheduler3"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		lazy-init="false">
		<property name="group" value="COLLECTION_REMITTANCE_JOB_GROUP" />
		<property name="name" value="RemittanceInstrumentJob3" />
		<property name="durability" value="true" />
		<property name="jobClass"
			value="org.egov.collection.scheduler.RemittanceInstrumentJob" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobBeanName" value="remittanceInstrumentJobDelegate3" />
				<entry key="userName" value="egovernments" />
				<entry key="cityDataRequired" value="true" />
				<entry key="moduleName" value="collection" />
			</map>
		</property>
	</bean>

	<bean id="remittanceInstrumentJobDelegate3" class="org.egov.collection.scheduler.RemittanceInstrumentJob"
		lazy-init="true" scope="prototype">
		<property name="remittanceSchedulerService" ref="remittanceSchedulerService" />
		<property name="instrumentType"  value="cheque" />
		<property name="modulo" value="1" />
	</bean>

	<bean id="remittanceInstrumentCronTrigger3"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
		lazy-init="true">
		<property name="jobDetail" ref="remittanceInstrumentJobScheduler3" />
		<property name="group" value="COLLECTION_REMITTANCE_TRIGGER_GROUP" />
		<property name="name" value="RemittanceInstrumentTrigger3" />
		<property name="cronExpression" value="0 */10 * * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />
	</bean>
	<!-- END remittanceInstrumentJobScheduler3 -->
	<!-- Add description for remittanceInstrumentJobScheduler4 -->

	<bean name="remittanceInstrumentJobScheduler4" id="remittanceInstrumentJobScheduler4"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		lazy-init="false">
		<property name="group" value="COLLECTION_REMITTANCE_JOB_GROUP" />
		<property name="name" value="RemittanceInstrumentJob4" />
		<property name="durability" value="true" />
		<property name="jobClass"
			value="org.egov.collection.scheduler.RemittanceInstrumentJob" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobBeanName" value="remittanceInstrumentJobDelegate4" />
				<entry key="userName" value="egovernments" />
				<entry key="cityDataRequired" value="true" />
				<entry key="moduleName" value="collection" />
			</map>
		</property>
	</bean>

	<bean id="remittanceInstrumentJobDelegate4" class="org.egov.collection.scheduler.RemittanceInstrumentJob"
		lazy-init="true" scope="prototype">
		<property name="remittanceSchedulerService" ref="remittanceSchedulerService" />
		<property name="instrumentType"  value="dd" />
		<property name="modulo" value="0" />
	</bean>

	<bean id="remittanceInstrumentCronTrigger4"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
		lazy-init="true">
		<property name="jobDetail" ref="remittanceInstrumentJobScheduler4" />
		<property name="group" value="COLLECTION_REMITTANCE_TRIGGER_GROUP" />
		<property name="name" value="RemittanceInstrumentTrigger4" />
		<property name="cronExpression" value="0 */10 * * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />
	</bean>
	<!-- END remittanceInstrumentJobScheduler4 -->
	<!-- Add description for remittanceInstrumentJobScheduler5 -->

	<bean name="remittanceInstrumentJobScheduler5" id="remittanceInstrumentJobScheduler5"
		class="org.springframework.scheduling.quartz.JobDetailFactoryBean"
		lazy-init="false">
		<property name="group" value="COLLECTION_REMITTANCE_JOB_GROUP" />
		<property name="name" value="RemittanceInstrumentJob5" />
		<property name="durability" value="true" />
		<property name="jobClass"
			value="org.egov.collection.scheduler.RemittanceInstrumentJob" />
		<property name="requestsRecovery" value="true" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobBeanName" value="remittanceInstrumentJobDelegate5" />
				<entry key="userName" value="egovernments" />
				<entry key="cityDataRequired" value="true" />
				<entry key="moduleName" value="collection" />
			</map>
		</property>
	</bean>

	<bean id="remittanceInstrumentJobDelegate5" class="org.egov.collection.scheduler.RemittanceInstrumentJob"
		lazy-init="true" scope="prototype">
		<property name="remittanceSchedulerService" ref="remittanceSchedulerService" />
		<property name="instrumentType"  value="dd" />
		<property name="modulo" value="1" />
	</bean>

	<bean id="remittanceInstrumentCronTrigger5"
		class="org.springframework.scheduling.quartz.CronTriggerFactoryBean"
		lazy-init="true">
		<property name="jobDetail" ref="remittanceInstrumentJobScheduler5" />
		<property name="group" value="COLLECTION_REMITTANCE_TRIGGER_GROUP" />
		<property name="name" value="RemittanceInstrumentTrigger5" />
		<property name="cronExpression" value="0 */10 * * * ?" />
		<property name="misfireInstructionName" value="MISFIRE_INSTRUCTION_DO_NOTHING" />
	</bean>
	<!-- END remittanceInstrumentJobScheduler5 -->
</beans>
