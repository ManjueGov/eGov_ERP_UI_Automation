{
    "swagger": "2.0",
    "info": {
        "version": "0.0.0",
        "title": "eGov Public Service API"
    },
    "host": "phoenix-qa.egovernments.org",
    "schemes": [
        "https"
    ],
    "basePath": "/v1/[API endpoint]",
    "paths": {
        "/services": {
            "get": {
                "summary": "Service List",
                "description": "provide a list of acceptable service request types and their associated service codes. These request types can be unique to the city/jurisdiction.\n",
                "parameters": [
                    {
                        "name": "request_header",
                        "in": "body",
                        "description": "Request header for the Services.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestHeader"
                        }
                    },
                    {
                        "name": "jurisdiction_id",
                        "in": "query",
                        "description": "Unique id for ulb.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    }
                ],
                "tags": [
                    "Service List"
                ],
                "responses": {
                    "200": {
                        "description": "service definition",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceRes"
                            }
                        }
                    },
                    "400": {
                        "description": "jurisdiction_id was not provided or General service error",
                        "schema": {
                            "$ref": "#/definitions/ServiceRes"
                        }
                    },
                    "404": {
                        "description": "jurisdiction_id provided was not found",
                        "schema": {
                            "$ref": "#/definitions/ServiceRes"
                        }
                    }
                }
            },
            "post": {
                "summary": "Create Service",
                "description": "To create a new service.",
                "parameters": [
                    {
                        "name": "request_header",
                        "in": "body",
                        "description": "Request header for the new Service Request.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ServiceReq"
                        }
                    },
                    {
                        "name": "jurisdiction_id",
                        "in": "query",
                        "description": "Unique id for ulb.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    }
                ],
                "tags": [
                    "Service"
                ],
                "responses": {
                    "201": {
                        "description": "service created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceRes"
                            }
                        }
                    },
                    "400": {
                        "description": "jurisdiction_id was not provided or General service error",
                        "schema": {
                            "$ref": "#/definitions/ServiceRes"
                        }
                    },
                    "404": {
                        "description": "jurisdiction_id provided was not found",
                        "schema": {
                            "$ref": "#/definitions/ServiceRes"
                        }
                    }
                }
            }
        },
        "/services/{service_code}": {
            "put": {
                "summary": "Update Service",
                "description": "To update an existing service.",
                "parameters": [
                    {
                        "name": "jurisdiction_id",
                        "in": "query",
                        "description": "Unique id for ulb.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "service_code",
                        "in": "path",
                        "description": "Unique service code for service to be updated .",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "service",
                        "in": "body",
                        "description": "The unique identifier for the service request type.",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/ServiceReq"
                            }
                        }
                    }
                ],
                "tags": [
                    "Service"
                ],
                "responses": {
                    "200": {
                        "description": "service updated",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceRes"
                            }
                        }
                    },
                    "400": {
                        "description": "jurisdiction_id was not provided or General service error",
                        "schema": {
                            "$ref": "#/definitions/ServiceRes"
                        }
                    },
                    "404": {
                        "description": "jurisdiction_id provided was not found",
                        "schema": {
                            "$ref": "#/definitions/ServiceRes"
                        }
                    }
                }
            },
            "get": {
                "summary": "Service Definiton",
                "description": "Define attributes associated with a service code. These attributes can be unique to the city/jurisdiction.\n",
                "parameters": [
                    {
                        "name": "jurisdiction_id",
                        "in": "query",
                        "description": "Unique id for city.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "service_code",
                        "in": "path",
                        "description": "service code value.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "request_header",
                        "in": "body",
                        "description": "Request header for the Service Definition.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestHeader"
                        }
                    }
                ],
                "tags": [
                    "Service Details"
                ],
                "responses": {
                    "200": {
                        "description": "Service Definition",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ServiceDefinitionRes"
                            }
                        }
                    },
                    "400": {
                        "description": "service_code or jurisdiction_id was not provided or General service error",
                        "schema": {
                            "$ref": "#/definitions/ServiceDefinitionRes"
                        }
                    },
                    "404": {
                        "description": "service_code or jurisdiction_id provided were not found",
                        "schema": {
                            "$ref": "#/definitions/ServiceDefinitionRes"
                        }
                    }
                }
            }
        },
        "/requests": {
            "post": {
                "summary": "Create service requests",
                "description": "To Create new service requests.",
                "parameters": [
                    {
                        "name": "jurisdiction_id",
                        "in": "query",
                        "description": "Unique id for city.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The unique identifier for the service request type.",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RequestReq"
                            }
                        }
                    }
                ],
                "tags": [
                    "Service Request"
                ],
                "responses": {
                    "201": {
                        "description": "Service Request Created",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RequestRes"
                            }
                        }
                    },
                    "400": {
                        "description": "service_code or jurisdiction_id was not provided or General service error",
                        "schema": {
                            "$ref": "#/definitions/RequestRes"
                        }
                    },
                    "404": {
                        "description": "service_code or jurisdiction_id provided were not found",
                        "schema": {
                            "$ref": "#/definitions/RequestRes"
                        }
                    }
                }
            },
            "get": {
                "summary": "Query multiple request",
                "description": "Return service request details.",
                "parameters": [
                    {
                        "name": "request_header",
                        "in": "body",
                        "description": "Request header for the service request details.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestHeader"
                        }
                    },
                    {
                        "name": "jurisdiction_id",
                        "in": "query",
                        "description": "Unique id for ulb.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "service_request_id",
                        "in": "query",
                        "description": "service Request.",
                        "required": false,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "service_code",
                        "in": "query",
                        "description": "Specify the service type by calling the unique ID of the service_code.",
                        "required": false,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Earliest datetime to include in search.",
                        "required": false,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "Latest datetime to include in search.",
                        "required": false,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Allows one to search for requests which have a specific status. This defaults to all statuses; can be declared multiple times, comma delimited;",
                        "required": false,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "last_modified_datetime",
                        "in": "query",
                        "description": "last modified date for the given service_request.",
                        "required": false,
                        "type": "string",
                        "format": "varchar"
                    }
                ],
                "tags": [
                    "Service Request"
                ],
                "responses": {
                    "200": {
                        "description": "service_requests",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RequestRes"
                            }
                        }
                    },
                    "400": {
                        "description": "service_request_id or jurisdiction_id was not provided or General service error",
                        "schema": {
                            "$ref": "#/definitions/RequestRes"
                        }
                    },
                    "404": {
                        "description": "service_request_id or jurisdiction_id provided were not found",
                        "schema": {
                            "$ref": "#/definitions/RequestRes"
                        }
                    }
                }
            }
        },
        "/requests/{service_request_id}": {
            "put": {
                "summary": "Update service requests",
                "description": "To Update new service requests.",
                "parameters": [
                    {
                        "name": "jurisdiction_id",
                        "in": "query",
                        "description": "Unique id for city.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "service_request_id",
                        "in": "path",
                        "description": "service code value.",
                        "required": true,
                        "type": "string",
                        "format": "varchar"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "The unique identifier for the service request type.",
                        "required": true,
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RequestReq"
                            }
                        }
                    }
                ],
                "tags": [
                    "Service Request"
                ],
                "responses": {
                    "201": {
                        "description": "Service Request Updated",
                        "schema": {
                            "items": {
                                "$ref": "#/definitions/RequestRes"
                            }
                        }
                    },
                    "400": {
                        "description": "service_code or jurisdiction_id was not provided or General service error",
                        "schema": {
                            "$ref": "#/definitions/RequestRes"
                        }
                    },
                    "404": {
                        "description": "service_code or jurisdiction_id provided were not found",
                        "schema": {
                            "$ref": "#/definitions/RequestRes"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Service": {
            "type": "object",
            "properties": {
                "service_code": {
                    "type": "string",
                    "description": "The unique identifier for Service"
                },
                "service_name": {
                    "type": "string",
                    "description": "Service name."
                },
                "description": {
                    "type": "string",
                    "description": "Services description."
                },
                "metadata": {
                    "type": "boolean",
                    "description": "Whether service meta data is present"
                },
                "type": {
                    "type": "string",
                    "description": "realtime (Currently we only support real time srevices)"
                },
                "keywords": {
                    "type": "string",
                    "description": "tags for this service"
                },
                "group": {
                    "type": "string",
                    "description": "Group associated to service"
                }
            },
            "required": [
                "service_code",
                "service_name"
            ]
        },
        "Value": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The unique identifier associated with an option for singlevaluelist or multivaluelist."
                },
                "name": {
                    "type": "string",
                    "description": "The human readable title of an option for singlevaluelist or multivaluelist."
                }
            }
        },
        "Attribute": {
            "type": "object",
            "properties": {
                "variable": {
                    "type": "boolean",
                    "description": "Denotes whether user input is required or not"
                },
                "code": {
                    "type": "string",
                    "description": "A unique identifier for the attribute"
                },
                "datatype": {
                    "type": "string",
                    "description": "Denotes the type of field used for user input."
                },
                "required": {
                    "type": "boolean",
                    "description": "Indicates if input from user is required."
                },
                "datatype_description": {
                    "type": "string",
                    "description": "A description of the datatype which helps the user provide their input"
                },
                "values": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Value"
                    }
                }
            }
        },
        "ServiceDefinition": {
            "description": "Extra meta data about the service, present only if metadata is true for a service",
            "type": "object",
            "properties": {
                "service_code": {
                    "type": "string",
                    "description": "Returns the service_code associated with the definition, the same one submitted for this call."
                },
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Attribute"
                    }
                }
            },
            "required": [
                "service_code"
            ]
        },
        "Request": {
            "type": "object",
            "description": "Service request raised by the citizen",
            "required": [
                "service_code",
                "description"
            ],
            "properties": {
                "service_request_id": {
                    "type": "string",
                    "readOnly": true,
                    "description": "The unique ID of the service request created."
                },
                "status": {
                    "type": "boolean",
                    "description": "The current status of the service request."
                },
                "status_notes": {
                    "type": "string",
                    "description": "Explanation of why status was changed to current state or more details on current status than conveyed with status alone."
                },
                "service_name": {
                    "type": "string",
                    "description": "The human readable name of the service request type."
                },
                "service_code": {
                    "type": "string",
                    "description": "The unique identifier for the service request type."
                },
                "description": {
                    "type": "string",
                    "description": "A full description of the request or report submitted."
                },
                "agency_responsible": {
                    "type": "string",
                    "description": "The agency responsible for fulfilling or otherwise addressing the service request."
                },
                "service_notice": {
                    "type": "string",
                    "description": "Information about the action expected to fulfill the request or otherwise address the information reported."
                },
                "requested_datetime": {
                    "type": "string",
                    "description": "The date and time when the service request was made."
                },
                "updated_datetime": {
                    "type": "string",
                    "description": "The date and time when the service request was last modified. For requests with status=closed, this will be the date the request was closed."
                },
                "expected_datetime": {
                    "type": "string",
                    "description": "The date and time when the service request can be expected to be fulfilled. This may be based on a service-specific service level agreement."
                },
                "address": {
                    "type": "string",
                    "description": "Human readable address or description of location."
                },
                "address_id": {
                    "type": "string",
                    "description": "The internal address ID used by a jurisdictions master address repository or other addressing system."
                },
                "zipcode": {
                    "type": "integer",
                    "description": "The postal code for the location of the service request."
                },
                "lat": {
                    "type": "integer",
                    "description": "Latitude of the location."
                },
                "long": {
                    "type": "integer",
                    "description": "Longitude of location."
                },
                "media_url": {
                    "type": "string",
                    "description": "A URL to media associated with the request, eg an image."
                }
            }
        },
        "ServiceReq": {
            "allOf": [
                {
                    "$ref": "#/definitions/RequestHeader"
                },
                {
                    "$ref": "#/definitions/Service"
                }
            ],
            "type": "object"
        },
        "ServiceRes": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResponseHeader"
                }
            ],
            "type": "object",
            "properties": {
                "Services": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Service"
                    }
                }
            }
        },
        "ServiceDefinitionRes": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResponseHeader"
                }
            ],
            "type": "object",
            "properties": {
                "ServiceDefinition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ServiceDefinition"
                    }
                }
            }
        },
        "RequestReq": {
            "allOf": [
                {
                    "$ref": "#/definitions/RequestHeader"
                },
                {
                    "$ref": "#/definitions/Request"
                }
            ],
            "type": "object"
        },
        "RequestRes": {
            "allOf": [
                {
                    "$ref": "#/definitions/ResponseHeader"
                }
            ],
            "type": "object",
            "properties": {
                "Request": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Request"
                    }
                }
            }
        },
        "RequestHeader": {
            "type": "object",
            "properties": {
                "api_id": {
                    "type": "string",
                    "description": "unique API ID"
                },
                "ver": {
                    "type": "string",
                    "description": "API version"
                },
                "ts": {
                    "type": "string",
                    "description": "response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to +5.30)"
                },
                "action": {
                    "type": "string",
                    "description": "api action like GET/POST/PUT/DELETE in case of http calls"
                },
                "did": {
                    "type": "string",
                    "description": "device UUID from which API is called"
                },
                "key": {
                    "type": "string",
                    "description": "API key (dynamic)"
                },
                "msg_id": {
                    "type": "string",
                    "description": "unique request message id, UUID, for handling API idempotency"
                },
                "requester_id": {
                    "type": "string",
                    "description": "UserId of the user calling"
                },
                "auth_token": {
                    "type": "string",
                    "description": "//session/jwt/saml token/oauth token"
                }
            },
            "required": [
                "api_id",
                "ver",
                "ts"
            ]
        },
        "ResponseHeader": {
            "type": "object",
            "properties": {
                "api_id": {
                    "type": "string",
                    "description": "unique API ID"
                },
                "ver": {
                    "type": "string",
                    "description": "API version"
                },
                "ts": {
                    "type": "string",
                    "description": "response timestamp YYYY-MM-DDThh:mm:ss+/-nn:nn (timezone defaulted to +5.30)"
                },
                "res_msg_id": {
                    "type": "string",
                    "description": "unique response message id (UUID)"
                },
                "msg_id": {
                    "type": "string",
                    "description": "message id of the request"
                },
                "status": {
                    "type": "string",
                    "description": "status of request e.g. successful, failed etc"
                },
                "error": {
                    "$ref": "#/definitions/Error"
                }
            },
            "required": [
                "api_id",
                "ver",
                "ts",
                "status"
            ]
        },
        "Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                }
            }
        }
    }
}

